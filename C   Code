#include <iostream>
#include <string>
#include <ostream>

using namespace std;
class Fruit
{
private:
	string m_name = "fruit";
	string m_color = "unknown";
public:
	Fruit(string name, string color) : m_name(name), m_color(color) {}
	string getName() const
	{
		return m_name;
	}
	string getColor() const
	{
		return m_color;
	}
};

class Apple : public Fruit
{
private:
	double m_fiber = 10.0;
public:
	Apple(string name, string color, double fiber) :Fruit(name, color), m_fiber(fiber) {}
	double getFiber() const
	{
		return m_fiber;
	}
	friend ostream& operator<<(ostream &out, Apple apple)
	{
		out << apple.getName() << " , " << apple.getColor() << " , " << apple.getFiber() << endl;;
		return out;
	}
};

class Banana : public Fruit
{
public:
	Banana(string name, string color) :Fruit(name, color) {}
	friend ostream& operator<<(ostream &out, Banana banana)
	{
		out << banana.getName() << " , " << banana.getColor() << endl;
		return out;
	}
};

int main()
{
	const Apple a("Granny Smith", "green", 4.2);
	std::cout << a;

	const Banana b("Cavendish", "yellow");
	std::cout << b;
	return 0;
}
